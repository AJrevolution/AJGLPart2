#version 420 core

layout(std140, binding = 0) uniform CameraMatrices 
{
    mat4 viewMatrix;
    mat4 projectionMatrix;
    vec3 camPos;
    float padding;  // Padding to align data in std140 layout, ensures the next vec4 starts on a 16-byte boundary
};


layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aNormal;
layout (location = 2) in vec2 aTexCoords;

out vec2 TexCoords;
out vec3 WorldPos;
out vec3 Normal;

uniform mat4 model;
uniform mat3 normalMatrix;

void main()
{

    TexCoords = aTexCoords;
    WorldPos = vec3(model * vec4(aPos, 1.0));
    Normal = normalMatrix * aNormal;   
    gl_Position =  projectionMatrix * viewMatrix * model * vec4(aPos, 1.0);
}